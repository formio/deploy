global:
  ## Global image registry to use if it needs to be overridden for some specific use cases (e.g local registries, custom images, ...)
  ##
  imageRegistry: ""

  ## Reference to one or more secrets to be used when pulling images
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  imagePullSecrets: []

# override name generated by the fullname template fn
fullnameOverride: ""
# override name used in fullname template fn
# defaults to the name of the chart
nameOverride: ""

# the K8s secret containing all sensitive values for the API and PDF servers
# if existingSecret is false, the chart will create its own Secret with the name specified
# if existingSecret is true, the chart will use the existing Secret with the name specified
secret:
  name: formio-enterprise-secret
  existingSecret: false # if false, the chart will create its own Secret with the values below
  # if using an existing secret, you must define the secret keys like this:
  # with an existing secret, you don't need to define any of the keys listed below
  # if including an additional secret key not included here, you must add it in your own values file, like:
  # secret:
  #   common:
  #     myCustomKey: ""
  #   api:
  #     myCustomApiKey: ""
  # env vars common to the API and PDF servers
  common:
    # required keys 
    mongo: ""
    licenseKey: ""
    dbSecret: ""
    # additional vars not included in this base values file
    extraVars: []
    # extraVars:
    #   - name: COMMON_SECRET
    #     value: ""
    # additional keys in the existing secret that are not known to this chart
    extraExistingKeys: []
  # env vars specific to the API server
  api:
    # required keys 
    portalSecret: ""
    adminPass: ""
    jwtSecret: ""
    # optional keys
    adminKey: ""
    dbSecretOld: ""
    dropboxClientid: ""
    dropboxClientsecret: ""
    sendgridUsername: ""
    sendgridPassword: ""
    esignPrivateKey: ""
    # additional vars not included in this base values file
    extraVars: []
    # additional keys in the existing secret that are not known to this chart 
    extraExistingKeys: []
  # env vars specific to the PDF server
  pdf:
    # optional keys
    formioPdfAdminkey: ""
    formioS3Key: ""
    formioS3Secret: ""
    formioAzureConnectionString: ""
    formioAzureContainer: ""
    # additional vars not included in this base values file
    extraVars: []
    # additional keys in the existing secret that are not known to this chart
    extraExistingKeys: []

# public env vars common to both API and PDF servers
# used for standalone API server as well
common:
  env:
    licenseRemote: ""
    extraVars: []

api:
  name: api
  image:
    repository: formio/formio-enterprise
    pullPolicy: IfNotPresent
    tag: "9.5.0"
  env:
    # required keys
    portalEnabled: true
    adminEmail: ""
    # optional keys
    pdfServer: ""
    debug: ""
    portalSso: ""
    portalSsoLogout: ""
    ssoTeams: ""
    baseUrl: ""
    httpProxy: ""
    httpsProxy: ""
    noProxy: ""
    formioVmTimeout: ""
    hstsMaxAge: ""
    hstsIncludeSubDomains: ""
    hstsPreload: ""
    mongoCa: ""
    mongoSslValidate: ""
    mongoConfig: ""
    jwtExpireTime: ""
    maxBodySize: ""
    onlyPrimaryWriteAccess: ""
    emailOverride: ""
    extraVars: []
  service:
    type: ClusterIP
    clusterIP: ""
    loadBalancerIP: ""
    loadBalancerClass: ""
    loadBalancerSourceRanges: []
    ipFamilies: []
    ipFamilyPolicy: ""
    externalIPs: []
    sessionAffinity: None
    sessionAffinityConfig: {}
    externalTrafficPolicy: Cluster
    publishNotReadyAddresses: false
    port: 80
    annotations: {}
  ingress:
    enabled: true
    className: ""
    annotations: {}
    hosts:
    - host: ""
    tls: []
  deployment:
    replicaCount: 1
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80
    podAnnotations: {}
    podLabels: {}
    podSecurityContext: {}
    securityContext: {}
    terminationGracePeriodSeconds: ""
    startupProbe:
      enabled: false
      httpGet:
        path: /health
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 30
      successThreshold: 1
    readinessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 10
      successThreshold: 1
    livenessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 10
      successThreshold: 1
    resources: {}
    volumes: []
    volumeMounts: []
    nodeSelector: {}
    tolerations: []
    hostAliases: []
    dnsPolicy: ClusterFirst
    dnsConfig: {}
    topologySpreadConstraints: []
    priorityClassName: ""
    restartPolicy: ""
    affinity: {}

# use of the pdf server is optional
pdf:
  enabled: false
  name: pdf
  image:
    repository: formio/pdf-server
    pullPolicy: IfNotPresent
    tag: "5.10.15"
  fileStorageProvider: ""
  env:
    # optional keys, but some may be required depending on your storage provider
    formioS3Bucket: ""
    formioS3Region: ""
    formioS3Server: ""
    formioS3Port: ""
    debug: ""
    mongoDbName: ""
    mongoCa: ""
    pdfBrowserTimeout: ""
    maxBodySize: ""
    pagePoolPageTtl: ""
    defaultPagePoolSize: ""
    pdfPrintingTimeout: ""   
    htmlGenerationTimeout: ""
    htmlGenerationBackoff: ""
    textractRoleArn: ""
    textractSnsTopicArn: ""
    textractOutputFolder: ""
    textractMaxSyncCount: ""
    extraVars: []
  service:
    type: ClusterIP
    clusterIP: ""
    loadBalancerIP: ""
    loadBalancerClass: ""
    loadBalancerSourceRanges: []
    ipFamilies: []
    ipFamilyPolicy: ""
    externalIPs: []
    externalTrafficPolicy: Cluster
    sessionAffinity: None
    sessionAffinityConfig: {}
    publishNotReadyAddresses: false
    port: 80
    annotations: {}
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
    - host: ""
    tls: []
  deployment:
    replicaCount: 1
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80
    podAnnotations: {}
    podLabels: {}
    podSecurityContext: {}
    securityContext: {}
    terminationGracePeriodSeconds: ""
    startupProbe:
      enabled: false
      httpGet:
        path: /health
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 30
      successThreshold: 1
    readinessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 10
      successThreshold: 1
    livenessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 10
      successThreshold: 1
    resources: {}
    volumes: []
    volumeMounts: []
    nodeSelector: {}
    tolerations: []
    hostAliases: []
    dnsPolicy: ClusterFirst
    dnsConfig: {}
    topologySpreadConstraints: []
    priorityClassName: ""
    restartPolicy: ""
    affinity: {}

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""
